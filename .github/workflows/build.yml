name: Build

on: [push, pull_request]

jobs:
  build-current-toolchain:
    name: 'Current ${{ matrix.toolchain.name }}'
    runs-on: windows-latest
    defaults:
      run:
        shell: ${{ matrix.toolchain.shell }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
        - { name: 'MSVC (32-bit, Release)',  shell: 'sh',  setup-cmake: true, setup-ninja: true, setup-msvc: true, vc-arch: 'amd64_x86', dx5-libs: true,   d3drm-from-wine: false, build-type: 'Release' }
        - { name: 'MSVC (64-bit, Release, Optimized)', shell: 'sh', setup-cmake: true, setup-ninja: true, setup-msvc: true, vc-arch: 'amd64', dx5-libs: false, d3drm-from-wine: true, build-type: 'Release', cpu-flags: '-march=znver4 -O3 -mavx -mavx2 -mavx512 -mfma -msse -msse2 -msse3 -msse4.1 -msse4.2 -msha -mssse3' }
        - { name: 'MSVC (64-bit, Debug)',  shell: 'sh',  setup-cmake: true, setup-ninja: true, setup-msvc: true, vc-arch: 'amd64',     dx5-libs: false,  d3drm-from-wine: true, build-type: 'Debug' }

    steps:
      - name: Setup vcvars
        if: matrix.toolchain.setup-msvc
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.toolchain.vc-arch }}

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        run: |
          cmake -S . -B build -GNinja \
            -DCMAKE_BUILD_TYPE=${{ matrix.toolchain.build-type }} \
            -DISLE_USE_DX5=${{ matrix.toolchain.dx5-libs }} \
            -DISLE_D3DRM_FROM_WINE=${{ matrix.toolchain.d3drm-from-wine }} \
            -DENABLE_CLANG_TIDY=${{ !!matrix.toolchain.clang-tidy }} \
            -DISLE_WERROR=${{ !!matrix.toolchain.werror }} \
            -Werror=dev \
            -DCMAKE_CXX_FLAGS="${{ matrix.toolchain.cpu-flags }}"
          cmake --build build -- -k0

      - name: Make Artifact Archive
        shell: bash
        run: |
          cd build
          7z a "isle-portable (${{ matrix.toolchain.name }}).zip" \
              ISLE.EXE LEGO1.DLL SDL3.dll

      - name: Upload Build Artifacts (MSVC (64-bit, Optimized))
        if: ${{ matrix.toolchain.name == 'MSVC (64-bit, Release, Optimized)' }}
        uses: actions/upload-artifact@v4
        with:
          name: msvc64-optimized-artifacts
          path: |
            build/isle-portable (${{ matrix.toolchain.name }}).zip
